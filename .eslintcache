[{"C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\index.js":"1","C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\App.js":"2","C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\MovieCard.js":"3","C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\data.js":"4","C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\AddMovie.js":"5"},{"size":220,"mtime":1611236612271,"results":"6","hashOfConfig":"7"},{"size":968,"mtime":1612017148093,"results":"8","hashOfConfig":"7"},{"size":1523,"mtime":1612016916760,"results":"9","hashOfConfig":"7"},{"size":629,"mtime":1611667906991,"results":"10","hashOfConfig":"7"},{"size":1949,"mtime":1612020978811,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tknakv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\index.js",[],["24","25"],"C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\App.js",[],"C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\MovieCard.js",["26"],"import React from \"react\"\r\nimport{FaStar} from 'react-icons/fa'\r\n\r\n\r\n const Moviecard=(props)=>{\r\n   if(props.word !=\"\"){\r\n    const filter=props.Movies.filter(movie=>{\r\n     return movie.name.toLowerCase().includes(props.word)\r\n    })\r\n\r\n  return(\r\n   <div className=\"flex-container\">\r\n    {filter.map((movie,i)=>{\r\n     return(\r\n      <div key={i}>\r\n       <img src={movie.image} alt=\"\"/>\r\n       <h2>{movie.name}</h2>\r\n       {[...Array(5)].map((v,i)=>{\r\n        return <FaStar key={i} size={25} color={i<movie.stars?\"yellow\":\"gray\"}/>\r\n       })\r\n       }\r\n      </div>\r\n     )\r\n   })\r\n   }\r\n   </div>\r\n   )}\r\n  //second return\r\n  if(props.rating===0){\r\n  return(\r\n   <div className=\"flex-container\">\r\n    {props.Movies.map((movie,i)=>{\r\n     return(\r\n      <div key={i}>\r\n       <img src={movie.image} alt=\"\"/>\r\n       <h2>{movie.name}</h2>\r\n       {[...Array(5)].map((v,i)=>{\r\n        return <FaStar key={i} size={25} color={i<movie.stars?\"yellow\":\"gray\"}/>\r\n       })\r\n       }\r\n      </div>\r\n     )\r\n   })\r\n   }\r\n   </div>\r\n   )}\r\n   //third return\r\n   let filtred=props.Movies.filter((movie)=>{return movie.stars===props.rating})\r\n   return(\r\n   <div className=\"flex-container\">\r\n    {filtred.map((movie,i)=>{\r\n      return(\r\n      <div >\r\n       <img src={movie.image} alt=\"\"/>\r\n       <h2>{movie.name}</h2>\r\n       {[...Array(5)].map((v,i)=>{\r\n        return <FaStar key={i} size={25} color={i<movie.stars?\"yellow\":\"gray\"}/>\r\n       })}\r\n      </div>)})}\r\n   </div>\r\n   )\r\n   \r\n\r\n   \r\n}\r\nexport default Moviecard","C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\data.js",[],"C:\\Users\\MOHAMED\\Desktop\\reat checkpoints\\hook-app\\src\\AddMovie.js",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":6,"column":18,"nodeType":"34","messageId":"35","endLine":6,"endColumn":20},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":16},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]